#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('ExploreExploit.py')]
proj.file-type = 'normal'
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'),
                      'abs')]},
        loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                             '_T')]],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_multiarray_umath.pi'),
                      'absolute')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('ExploreExploit.py'): {'expanded-nodes': [],
                                   'selected-nodes': [None],
                                   'top-node': None},
        loc('../hpa-scc/CellSegmentatorTest.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/CellSegmentatorTest.py'),
                      'ax')]},
        loc('../hpa-scc/README.md'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../hpa-scc/analyze-labels.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/analyze-labels.py'),
                             'csvfile')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/analyze-labels.py'),
                      'args')]},
        loc('../hpa-scc/census.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/census.py'),
        'axs')]},
        loc('../hpa-scc/dirichlet.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/dirichlet.py'),
                             'get_dist')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/dirichlet.py'),
                      'args')]},
        loc('../hpa-scc/encoder.py'): {'expanded-nodes': [],
                                       'selected-nodes': [None],
                                       'top-node': None},
        loc('../hpa-scc/ex.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': None},
        loc('../hpa-scc/hpascc.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/hpascc.py'),
        'read_training_expectations')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/hpascc.py'),
        'BLUE')]},
        loc('../hpa-scc/image_seg.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/image_seg.py'),
                             'info')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/image_seg.py'),
                      'dataset')]},
        loc('../hpa-scc/logs.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/logs.py'),
        'expand')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/logs.py'),
        'args')]},
        loc('../hpa-scc/old/README.md'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/train2.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../hpa-scc/old/train2.py'),
                             'restart')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/train2.py'),
                      'args')]},
        loc('../hpa-scc/old/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/old/vizcnn.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/old/vizcnn.py'),
                      'args')]},
        loc('../hpa-scc/otsu.py'): {'expanded-nodes': [],
                                    'selected-nodes': [[('function def',
        loc('../hpa-scc/otsu.py'),
        'get_thinned')]],
                                    'top-node': [('generic attribute',
        loc('../hpa-scc/otsu.py'),
        'BLUE')]},
        loc('../hpa-scc/seg.py'): {'expanded-nodes': [],
                                   'selected-nodes': [],
                                   'top-node': [('generic attribute',
        loc('../hpa-scc/seg.py'),
        'cell_mask')]},
        loc('../hpa-scc/segment.py'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('function def',
        loc('../hpa-scc/segment.py'),
        'apply_masks')]},
        loc('../hpa-scc/select_images.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/select_images.py'),
                      'args')]},
        loc('../hpa-scc/slice.py'): {'expanded-nodes': [],
                                     'selected-nodes': [[('function def',
        loc('../hpa-scc/slice.py'),
        'create_image_target')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/slice.py'),
        'args')]},
        loc('../hpa-scc/slice2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/slice2.py'),
        'create_image_target')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/slice2.py'),
        'args')]},
        loc('../hpa-scc/spike5.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike5.py'),
        'axs')]},
        loc('../hpa-scc/spike6.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike6.py'),
        'axs')]},
        loc('../hpa-scc/spike7.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike7.py'),
        'axs')]},
        loc('../hpa-scc/spike8.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/spike8.py'),
        'axs')]},
        loc('../hpa-scc/spikes/spike6.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike6.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike6.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike7.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike7.py'),
                             'nrows')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike7.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/spike8.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/spikes/spike8.py'),
                             'y0')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/spike8.py'),
                      'axs')]},
        loc('../hpa-scc/spikes/watershed.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/spikes/watershed.py'),
                      'args')]},
        loc('../hpa-scc/split.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/split.py'),
        'args')]},
        loc('../hpa-scc/submission.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../hpa-scc/train.py'): {'expanded-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'CellDataset')],
        [('class def',
          loc('../hpa-scc/train.py'),
          'Net')]],
                                     'selected-nodes': [[('class def',
        loc('../hpa-scc/train.py'),
        'Net')]],
                                     'top-node': [('generic attribute',
        loc('../hpa-scc/train.py'),
        'args')]},
        loc('../hpa-scc/train2.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../hpa-scc/train2.py'),
        'restart')]],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/train2.py'),
        'args')]},
        loc('../hpa-scc/utils.py'): {'expanded-nodes': [],
                                     'selected-nodes': [],
                                     'top-node': [('function def',
        loc('../hpa-scc/utils.py'),
        'create_xkcd_colours')]},
        loc('../hpa-scc/visualize.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../hpa-scc/visualize.py'),
                             'Training')]],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/visualize.py'),
                      'args')]},
        loc('../hpa-scc/vizcnn.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../hpa-scc/vizcnn.py'),
        'args')]},
        loc('../hpa-scc/worklist.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../hpa-scc/worklist.py'),
                      'args')]},
        loc('../../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-no'\
        'des': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                             '__author__')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                      'ArgInfo')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/random.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                      'CellSegmentator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'),
                      'download_with_url')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'),
                      'EXAMPLE_IMAGES')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/afm.py'),
                      '')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                             '_set_ticks_on_axis_warn')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                      'Colorbar')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'),
                      'AxesStack')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                             '_rgb_to_rgba')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'),
                      'Arc')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                      'acorr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'),
                      'Affine2D')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                             '_var')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'),
                      'array_function_dispatch')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/interpolation.py'),
                      'affine_transform')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                      'convex_hull_plot_2d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'),
                      'adaptive_avg_pool1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                             '_ConvTransposeNd')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                      'Conv1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                      'clear_frames')]},
        loc('unknown:<untitled> #1'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': u'..\\..\\..\\Program Files (x86)\\Wing Personal 7.2\\bin\\voro',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'Load',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': u'Product',
                                       'fReverse': False,
                                       'fSearchText': u'Load',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 363L,
                       'folded-linenos': [],
                       'history': {None: ['D = [[0.5,0.5],[1,0,0,0]]\n',
        'D = []   # Priors\nD.append(np.array([0.5,0.5]))\nD.append(np.array'\
        '([1,0,0,0]))\n',
        'import numpy as np\n\nD = []   # Priors\nD.append(np.array([0.5,0.5'\
        ']))\nD.append(np.array([1,0,0,0]))\n',
        'D\n',
        'A = []      #Likelihoods\nA.append(np.array([[1,1],\n              '\
        '     [0,0],\n                   [0,0]]))\nA.append(np.array([[0,0],'\
        '\n                   [1,0],\n                   [0,1]]))\nA.append('\
        'np.array([[1,1],\n                   [0,0],\n                   [0,'\
        '0]]))\nA.append(np.array([[1,1],\n                   [0,0],\n      '\
        '             [0,0]]))\n',
        'A[1]\n',
        'A = []      #Likelihoods\nA.append(np.array([[[1,1],\n             '\
        '      [0,0],\n                   [0,0]]]))\n',
        'A = []      #Likelihoods\nA.append(np.array([[[1,1],\n             '\
        '      [0,0],\n                   [0,0]],\n                   [[1,1]'\
        ',\n                    [0,0],\n                    [0,0]]          '\
        '         ]))\n',
        'size(A)\n',
        'A.shape\n',
        'A.append(np.array([[[1,1],\n                   [0,0],\n            '\
        '       [0,0]],\n                   [[0,0],\n                    [1,'\
        '0],\n                    [0,1]],\n                   [[1,1],\n     '\
        '               [0,0],\n                    [0,0]],\n               '\
        '    [[1,1],\n                    [0,0],\n                    [0,0]]'\
        '\n                   ]))\n',
        'A = []      #Likelihoods\nA.append(np.array([[[1,1],\n             '\
        '      [0,0],\n                   [0,0]],\n                   [[0,0]'\
        ',\n                    [1,0],\n                    [0,1]],\n       '\
        '            [[1,1],\n                    [0,0],\n                  '\
        '  [0,0]],\n                   [[1,1],\n                    [0,0],\n'\
        '                    [0,0]]\n                   ]))\n',
        'A[0]\n',
        'A[0].shape\n',
        'A.append(np.array([]))\n',
        'A.append(np.array([\n    [[1,1],\n     [0,0],\n     [0,0]]\n]))\n',
        'A.append(np.array([\n    [[1,1],\n     [0,0],\n     [0,0]],\n    [['\
        '1,1],\n     [0,0],\n     [0,0]],\n    [[0,0],\n     [0.2, 0.8],\n  '\
        '   [0.8,0.2]]\n]))\n',
        'A\n']},
                       'launch-id': None,
                       'sel-line': 370L,
                       'sel-line-start': 6715L,
                       'selection_end': 6715L,
                       'selection_start': 6715L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.9972027972027973,
        ({'bookmarks': ([[loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126),
        ('SegmentationMask|0|.Load|0|',
         136)],
                           'code-line': '        Product               = Seg'\
        'mentationMask()\r\n',
                           'first-line': 121L,
                           'folded-linenos': [],
                           'sel-line': 137L,
                           'sel-line-start': 5110L,
                           'selection_end': 5158L,
                           'selection_start': 5142L,
                           'zoom': 0L},
                          1619116276.508],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('segment|0|',
        533)],
                           'code-line': '    mask      = SegmentationMask(Im'\
        'age,mu,dist=dist)\r\n',
                           'first-line': 545L,
                           'folded-linenos': [],
                           'sel-line': 569L,
                           'sel-line-start': 19501L,
                           'selection_end': 19548L,
                           'selection_start': 19548L,
                           'zoom': 0L},
                          1619116330.272],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126)],
                           'code-line': '    # Load\r\n',
                           'first-line': 123L,
                           'folded-linenos': [],
                           'sel-line': 128L,
                           'sel-line-start': 4852L,
                           'selection_end': 4862L,
                           'selection_start': 4858L,
                           'zoom': 0L},
                          1619116335.842],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126),
        ('SegmentationMask|0|.Load|0|',
         136)],
                           'code-line': '    def Load(cls,file_name,dist=mer'\
        'ge_greedy_centroids):\r\n',
                           'first-line': 123L,
                           'folded-linenos': [],
                           'sel-line': 136L,
                           'sel-line-start': 5052L,
                           'selection_end': 5064L,
                           'selection_start': 5060L,
                           'zoom': 0L},
                          1619116338.443],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126),
        ('SegmentationMask|0|.__init__|0|',
         142)],
                           'code-line': '        if Image is None: return   '\
        '         # Used by Mask.Load() to create empty Mask\r\n',
                           'first-line': 123L,
                           'folded-linenos': [],
                           'sel-line': 143L,
                           'sel-line-start': 5348L,
                           'selection_end': 5411L,
                           'selection_start': 5407L,
                           'zoom': 0L},
                          1619116339.196],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126)],
                           'code-line': '    # Load\r\n',
                           'first-line': 123L,
                           'folded-linenos': [],
                           'sel-line': 128L,
                           'sel-line-start': 4852L,
                           'selection_end': 4862L,
                           'selection_start': 4858L,
                           'zoom': 0L},
                          1619116339.965],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126),
        ('SegmentationMask|0|.Load|0|',
         136)],
                           'code-line': '    def Load(cls,file_name,dist=mer'\
        'ge_greedy_centroids):\r\n',
                           'first-line': 123L,
                           'folded-linenos': [],
                           'sel-line': 136L,
                           'sel-line-start': 5052L,
                           'selection_end': 5064L,
                           'selection_start': 5060L,
                           'zoom': 0L},
                          1619116341.18],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126),
        ('SegmentationMask|0|.Load|0|',
         136)],
                           'code-line': '    def Load(cls,file_name,dist=Non'\
        'e):\r\n',
                           'first-line': 102L,
                           'folded-linenos': [],
                           'sel-line': 136L,
                           'sel-line-start': 5052L,
                           'selection_end': 5088L,
                           'selection_start': 5088L,
                           'zoom': 0L},
                          1619116691.031],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('segment|0|',
        533)],
                           'code-line': '    k2,mu2,L2 = merge_greedy_centro'\
        'ids(k1,L1,mu1,dist=dist) if merge_greedy else (k1,L1,mu1)\r\n',
                           'first-line': 565L,
                           'folded-linenos': [],
                           'sel-line': 569L,
                           'sel-line-start': 19477L,
                           'selection_end': 19535L,
                           'selection_start': 19535L,
                           'zoom': 0L},
                          1619116783.146],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126),
        ('SegmentationMask|0|.Load|0|',
         136)],
                           'code-line': '    def Load(cls,file_name,dist=Non'\
        'e):\r\n',
                           'first-line': 137L,
                           'folded-linenos': [],
                           'sel-line': 136L,
                           'sel-line-start': 5052L,
                           'selection_end': 5064L,
                           'selection_start': 5060L,
                           'zoom': 0L},
                          1619116848.776],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': "            mask   = SegmentationMa"\
        "sk.Load(join(args.segments,f'{image_id}.npy'))\r\n",
                           'first-line': 192L,
                           'folded-linenos': [],
                           'sel-line': 212L,
                           'sel-line-start': 8640L,
                           'selection_end': 8677L,
                           'selection_start': 8673L,
                           'zoom': 0L},
                          1619116848.803],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [('create_image_target|0|',
        106)],
                           'code-line': "        mask           = Segmentati"\
        "onMask.Load(join(args.segments, f'{image_id}.npy'))\r\n",
                           'first-line': 108L,
                           'folded-linenos': [],
                           'sel-line': 122L,
                           'sel-line-start': 4449L,
                           'selection_end': 4495L,
                           'selection_start': 4491L,
                           'zoom': 0L},
                          1619116848.976],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': 'from dirichlet         import Image'\
        '4, SegmentationMask, get_dist\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 20L,
                           'sel-line-start': 883L,
                           'selection_end': 947L,
                           'selection_start': 947L,
                           'zoom': 0L},
                          1619116873.691],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': "            mask   = SegmentationMa"\
        "sk.Load(join(args.segments,f'{image_id}.npy'))\r\n",
                           'first-line': 192L,
                           'folded-linenos': [],
                           'sel-line': 212L,
                           'sel-line-start': 8650L,
                           'selection_end': 8692L,
                           'selection_start': 8688L,
                           'zoom': 0L},
                          1619116873.89],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': "            mask   = SegmentationMa"\
        "sk.Load(join(args.segments,f'{image_id}.npy'),dist=get_dist)\r\n",
                           'first-line': 192L,
                           'folded-linenos': [],
                           'sel-line': 212L,
                           'sel-line-start': 8650L,
                           'selection_end': 8744L,
                           'selection_start': 8744L,
                           'zoom': 0L},
                          1619116890.955],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('SegmentationMask|0|',
        126),
        ('SegmentationMask|0|.__init__|0|',
         142)],
                           'code-line': '        if Image is None: return   '\
        '         # Used by Mask.Load(...) to create empty Mask\r\n',
                           'first-line': 49L,
                           'folded-linenos': [],
                           'sel-line': 143L,
                           'sel-line-start': 5339L,
                           'selection_end': 5406L,
                           'selection_start': 5406L,
                           'zoom': 0L},
                          1619116944.881],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [('get_dist|0|',
        267)],
                           'code-line': 'def get_dist(pt0,pt1):\r\n',
                           'first-line': 271L,
                           'folded-linenos': [],
                           'sel-line': 267L,
                           'sel-line-start': 9440L,
                           'selection_end': 9452L,
                           'selection_start': 9444L,
                           'zoom': 0L},
                          1619578964.435],
                         [loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
                          {'displayed-index': -1,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 0}},
                          1619578970.523],
                         [loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
                          {'displayed-index': 0,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 1,
        'index': 0,
        'top': 0,
        'top-left-pos': 0}},
                          1619579007.943],
                         [loc('ExploreExploit.py'),
                          {'attrib-starts': [],
                           'code-line': '',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 1L,
                           'sel-line-start': 10L,
                           'selection_end': 10L,
                           'selection_start': 10L,
                           'zoom': 0L},
                          1619579053.89]],
                        20),
          'current-loc': loc('ExploreExploit.py'),
          'editor-state-list': [(loc('ExploreExploit.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'print (A)\r\n',
                                  'first-line': 41L,
                                  'folded-linenos': [],
                                  'sel-line': 57L,
                                  'sel-line-start': 789L,
                                  'selection_end': 798L,
                                  'selection_start': 798L,
                                  'zoom': 0L}),
                                (loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
                                 {'displayed-index': 0,
                                  'viewer-state': {'history': [-1,
        0],
        'history-pos': 1,
        'index': 0,
        'top': 0,
        'top-left-pos': 0}})],
          'has-focus': True,
          'locked': False},
         [loc('ExploreExploit.py'),
          loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC')]),
        ({'bookmarks': ([[loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'),
                          {'attrib-starts': [('figure|0|',
        554)],
                           'code-line': '        num = int(num)  # crude val'\
        'idation of num argument\r\n',
                           'first-line': 646L,
                           'folded-linenos': [],
                           'sel-line': 667L,
                           'sel-line-start': 22235L,
                           'selection_end': 22235L,
                           'selection_start': 22235L,
                           'zoom': 0L},
                          1618306384.139],
                         [loc('../hpa-scc/train.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 212L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618380697.634],
                         [loc('../hpa-scc/utils.py'),
                          {'attrib-starts': [('set_random_seed|0|',
        100)],
                           'code-line': "def set_random_seed(specified_seed="\
        "None,prefix='seed',suffix='txt'):\r\n",
                           'first-line': 88L,
                           'folded-linenos': [],
                           'sel-line': 100L,
                           'sel-line-start': 3347L,
                           'selection_end': 3366L,
                           'selection_start': 3351L,
                           'zoom': 0L},
                          1618380699.68],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618380701.947],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618427087.839],
                         [loc('../hpa-scc/logs.py'),
                          {'attrib-starts': [],
                           'code-line': 'from argparse          import Argum'\
        'entParser\r\n',
                           'first-line': 123L,
                           'folded-linenos': [],
                           'sel-line': 17L,
                           'sel-line-start': 788L,
                           'selection_end': 818L,
                           'selection_start': 818L,
                           'zoom': 0L},
                          1618444689.786],
                         [loc('../hpa-scc/utils.py'),
                          {'attrib-starts': [('create_xkcd_colours|0|',
        123)],
                           'code-line': "def create_xkcd_colours(file_name='"\
        "rgb.txt', prefix='xkcd:'):\r\n",
                           'first-line': 110L,
                           'folded-linenos': [],
                           'sel-line': 123L,
                           'sel-line-start': 4039L,
                           'selection_end': 4062L,
                           'selection_start': 4043L,
                           'zoom': 0L},
                          1618531759.252],
                         [loc('../hpa-scc/train.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 212L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618531762.419],
                         [loc('../hpa-scc/select_images.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618531762.962],
                         [loc('../hpa-scc/logs.py'),
                          {'attrib-starts': [],
                           'code-line': 'from argparse          import Argum'\
        'entParser\r\n',
                           'first-line': 123L,
                           'folded-linenos': [],
                           'sel-line': 17L,
                           'sel-line-start': 788L,
                           'selection_end': 818L,
                           'selection_start': 818L,
                           'zoom': 0L},
                          1618531765.724],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618785261.797],
                         [loc('../hpa-scc/utils.py'),
                          {'attrib-starts': [('create_xkcd_colours|0|',
        123)],
                           'code-line': "def create_xkcd_colours(file_name='"\
        "rgb.txt', prefix='xkcd:'):\r\n",
                           'first-line': 110L,
                           'folded-linenos': [],
                           'sel-line': 123L,
                           'sel-line-start': 4039L,
                           'selection_end': 4062L,
                           'selection_start': 4043L,
                           'zoom': 0L},
                          1618785262.568],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'),
                          {'attrib-starts': [('Colorbar|0|',
        1185),
        ('Colorbar|0|.__init__|0|',
         1195)],
                           'code-line': '        if mappable.get_array() is '\
        'not None:\r\n',
                           'first-line': 1176L,
                           'folded-linenos': [],
                           'sel-line': 1198L,
                           'sel-line-start': 46532L,
                           'selection_end': 46532L,
                           'selection_start': 46532L,
                           'zoom': 0L},
                          1618785263.308],
                         [loc('../hpa-scc/slice.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 159L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618785264.155],
                         [loc('../hpa-scc/hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618785264.937],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618867522.763],
                         [loc('../hpa-scc/hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618867523.483],
                         [loc('../hpa-scc/old/vizcnn.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1618867524.302],
                         [loc('../hpa-scc/dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1619578964.455],
                         [loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
                          {'displayed-index': -1,
                           'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 0}},
                          1619579053.924]],
                        20),
          'current-loc': loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
          'editor-state-list': [(loc('ExploreExploit.py'),
                                 {}),
                                (loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC'),
                                 {'displayed-index': -1,
                                  'viewer-state': {'history': [-1,
        0],
        'history-pos': 0,
        'index': -1,
        'top': 0,
        'top-left-pos': 0}})],
          'has-focus': False,
          'locked': False},
         [loc('ExploreExploit.py'),
          loc('../../../Program Files (x86)/Wing Personal 7.2/doc/TOC')])),
                               'open_files': [u'../../../Program Files (x86)/Wing Personal 7.2/doc/TOC',
        u'ExploreExploit.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1619585113.708),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1619578970.014),
                 'user_data': {}},
        'window-alloc': (7,
                         1,
                         1900,
                         1035)}]}
guimgr.recent-documents = [loc('unknown:untitled-1.py')]
proj.pyexec = {None: ('custom',
                      u'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
